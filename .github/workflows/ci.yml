name: CI

on:
  push:
    branches:
      - 'dev/**'
      - 'feature/**'
      - 'archive/**'
    tags:
      - v*.*.*
  workflow_dispatch:

env:
  ORIGINAL_PROJECT: "noeru-desu/Image-obfuscator"
  PROGRAM_NAME: "ImageObfuscator"
  BUILD_ENV: "win64-nuitka-msvc"

jobs:
  build:
    name: Build
    runs-on: windows-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}
      - name: Clone repo
        uses: actions/checkout@v2
      - name: 'Set up Developer Command Prompt'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      #- name: Download UPX
      #  uses: i3h/download-release-asset@v1.3.2
      #  with:
      #    owner: upx
      #    repo: upx
      #    tag: latest
      #    file: /upx-[0-9.]+-win64.zip/
      #    path: ./
      #- name: Unzip UPX
      #  run: |
      #    Expand-Archive -Path "./upx-*.zip" -DestinationPath "./"
      #    Move-Item "./upx-*/upx.exe" "./"
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      #- name: Download Pillow-SIMD
      #  uses: carlosperate/download-file-action@v1
      #  with:
      #    file-url: 'https://download.lfd.uci.edu/pythonlibs/archived/Pillow_SIMD-9.0.0.post0-cp310-cp310-win_amd64.whl'
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install pip --upgrade
          pip install -U wxPython
          pip install pillow numpy colorlog pycryptodome pyperclip natsort==8.2.0 orjson stego-lsb==1.3.5
          pip install -U zstandard ordered-set
          pip install -U "https://github.com/Nuitka/Nuitka/archive/develop.zip"
      #pip uninstall -y Pillow
      #pip install -U "Pillow_SIMD-9.0.0.post0-cp310-cp310-win_amd64.whl"
      - name: Cache Dependency Walker
        uses: actions/cache@v2
        with:
          path: |
            C:/Users/runneradmin/AppData/Local/Nuitka/Nuitka/depends/x86_64/depends.exe
          key: ${{ env.ORIGINAL_PROJECT }}-DependencyWalker
      - name: Build artifacts (normal)
        run: |
          mkdir build_normal
          nuitka --disable-console --python-flag=-OO,no_docstrings --clang --msvc=latest --lto=yes --prefer-source-code --onefile --show-anti-bloat-changes --assume-yes-for-downloads --plugin-enable=numpy --include-module=wx._xml --nofollow-import-to=colorlog,pydoc,tkinter,click,email --output-dir=build_normal --noinclude-pytest-mode=nofollow --noinclude-unittest-mode=nofollow --noinclude-setuptools-mode=nofollow --noinclude-IPython-mode=nofollow ImageObfuscator.py
          copy ".\build_normal\ImageObfuscator.exe" ".\ImageObfuscator.normal.exe"
      - name: Build artifacts (without dependencies and runtime)
        run: |
          mkdir build_without_runtime
          nuitka --disable-console --python-flag=-OO,no_docstrings --clang --msvc=latest --lto=yes --prefer-source-code --assume-yes-for-downloads --plugin-enable=numpy --include-module=wx._xml --nofollow-imports --output-dir=build_without_runtime --noinclude-pytest-mode=nofollow --noinclude-unittest-mode=nofollow --noinclude-setuptools-mode=nofollow --noinclude-IPython-mode=nofollow ImageObfuscator.py
          copy ".\build_without_runtime\ImageObfuscator.exe" ".\ImageObfuscator.without_runtime.exe"
          copy ".\build_without_runtime\ImageObfuscator.cmd" ".\ImageObfuscator.without_runtime.cmd"
      - name: Build artifacts (with console)
        run: |
          mkdir build_with_console
          nuitka --enable-console --clang --msvc=latest --lto=yes --prefer-source-code --onefile --show-anti-bloat-changes --assume-yes-for-downloads --plugin-enable=numpy --include-module=wx._xml --nofollow-import-to=pydoc,tkinter,click,email --output-dir=build_with_console --noinclude-pytest-mode=nofollow --noinclude-unittest-mode=nofollow --noinclude-setuptools-mode=nofollow --noinclude-IPython-mode=nofollow --warn-implicit-exceptions ImageObfuscator.py
          copy ".\build_with_console\ImageObfuscator.exe" ".\ImageObfuscator.with_console.exe"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_ENV }}-${{ env.VCToolsVersion }}-build.${{ github.run_number }}
          path: |
            ImageObfuscator.normal.exe
            ImageObfuscator.without_runtime.exe
            ImageObfuscator.without_runtime.cmd
            ImageObfuscator.with_console.exe
      # - name: Basic tests
      #   shell: cmd
      #   run: |
      #     if exist ".\nuitka\ImageObfuscator.exe" ".\nuitka\ImageObfuscator.exe" -t
      #     if exist ".\ImageObfuscator.without_runtime.exe" ".\ImageObfuscator.without_runtime.exe" -t
      #     if exist ".\ImageObfuscator.with_console.exe" ".\ImageObfuscator.with_console.exe" -t
      - name: Rename release exe
        if: startsWith(github.ref, 'refs/tags/') && github.repository == env.ORIGINAL_PROJECT
        shell: cmd
        run: |
          set ver=${{ github.ref_name }}
          copy ".\ImageObfuscator.normal.exe" ".\ImageObfuscator_%ver:v=%.exe"
          copy ".\ImageObfuscator.without_runtime.exe" ".\ImageObfuscator_%ver:v=%.without_runtime.exe"
          copy ".\ImageObfuscator.with_console.exe" ".\ImageObfuscator_%ver:v=%.with_console.exe"
      - name: Draft release
        if: startsWith(github.ref, 'refs/tags/') && github.repository == env.ORIGINAL_PROJECT
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ env.PROGRAM_NAME }} ${{ env.VERSION_TAG_SHORT }}
          body: |
            ## 新增
            * 
            * 
            ## 修改与优化
            * 
            * 
            ## 修复
            * 
            * 
            > _`with_console`后缀: 未使用`-OO`参数进行优化, 并在运行时显示CMD窗口, 复现错误时请始终使用此版本_
            > _`without_runtime`后缀: 在普通版本上去除了**Python运行时与依赖库**, 性能可能会略微降低, 使用此版本时请自行安装所需的运行时与依赖库_
          files: |
            ImageObfuscator_*.exe
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
